import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Test;

class JulgamentoPrisioneiroTest {
    
    private int PENA_INOCENCIA = 0;
    private int PENA_CONDENACAO_MUTUA = 5;
    private int PENA_CONDENACAO_INDIVIDUAL = 10;
    private int PENA_CONDENACAO_CUMPLICES = 1;
    
    private static final String INOCENTE = "Inocente";
    private static final String CULPADO = "Culpado";

    @Test
    public void testCalculaPenaInocencia() {
        
        JulgamentoPrisioneiro prisioneiro = new JulgamentoPrisioneiro();
        
        String prisioneiroA = INOCENTE;
        String prisioneiroB = INOCENTE;
        
        int pena = prisioneiro.calculaPena(prisioneiroA, prisioneiroB);
        
        assertEquals(PENA_INOCENCIA, pena);
        
    }
    
    @Test
    public void testCalculaPenaCondenacaoMutua() {
        
        JulgamentoPrisioneiro prisioneiro = new JulgamentoPrisioneiro();
        
        String prisioneiroA = CULPADO;
        String prisioneiroB = CULPADO;
        
        int pena = prisioneiro.calculaPena(prisioneiroA, prisioneiroB);
        
        assertEquals(PENA_CONDENACAO_MUTUA, pena);
        
    }
    
    @Test
    public void testCalculaPenaCondenacaoIndividual() {
        
        JulgamentoPrisioneiro prisioneiro = new JulgamentoPrisioneiro();
        
        String prisioneiroA = CULPADO;
        String prisioneiroB = INOCENTE;
        
        int pena = prisioneiro.calculaPena(prisioneiroA, prisioneiroB);
        
        assertEquals(PENA_CONDENACAO_INDIVIDUAL, pena);
        
    }
    
    @Test
    public void testCalculaPenaCondenacaoCumplices() {
        
        JulgamentoPrisioneiro prisioneiro = new JulgamentoPrisioneiro();
        
        String prisioneiroA = INOCENTE;
        String prisioneiroB = CULPADO;
        
        int pena = prisioneiro.calculaPena(prisioneiroA, prisioneiroB);
        
        assertEquals(PENA_CONDENACAO_CUMPLICES, pena);
        
    }

 

}

 

- Primeiro teste

    Depuração: Um erro de compilação referente ao código Java provido é gerado ao executar a JUnit, o erro foi gerado por conta da 
falta do parâmetro 'Resposta' (sendo passada uma classe como parâmetro ao invés de uma String).

Stacktrace: java.lang.Error: Unresolved compilation problems: 
    The method calculaPena(Resposta, Resposta) from the type JulgamentoPrisioneiro refers to the missing type Resposta
    The method calculaPena(Resposta, Resposta) from the type JulgamentoPrisioneiro refers to the missing type Resposta
    The method calculaPena(Resposta, Resposta) from the type JulgamentoPrisioneiro refers to the missing type Resposta
    The method calculaPena(Resposta, Resposta) from the type JulgamentoPrisioneiro refers to the missing type Resposta

 

    Como foi corrigido -> Na classe Java, foi alterado o parâmetro de input de 'calculaPena(Resposta prisioneiroA, Resposta prisioneiroB)' para 'calculaPena(String prisioneiroA, String prisioneiroB)' de acordo com o algoritmo primário fornecido no arquivo .docx.

 

    Como foi corrigido -> O método calculaPena teve seus parâmetros substituidos para tipos String.

 

 - Código public class JulgamentoPrisioneiro {

 

    private int PENA_INOCENCIA = 10;
    private int PENA_CONDENACAO_MUTUA = 15;
    private int PENA_CONDENACAO_INDIVIDUAL = 10;
    private int PENA_CONDENACAO_CUMPLICES = 11;

 

    public int calculaPena(String respostaPrisioneiroA, String respostaPrisioneiroB) {
        if (respostaPrisioneiroA == Resposta.DELACAO) {
            if (respostaPrisioneiroB == Resposta.DELACAO) {
                return PENA_CONDENACAO_MUTUA;
            } else {
                return PENA_INOCENCIA;
            }
        } else {
            if (respostaPrisioneiroB == Resposta.DELACAO) {
                return PENA_CONDENACAO_INDIVIDUAL;
            } else {
                return PENA_CONDENACAO_CUMPLICES;
            }
        }

 

    }

 

}

 

- Segundo teste

Interpretação -> Um erro de variáveis foi gerado durante os testes por conta do tipo de parâmetro passado no método 'calculaPena', 
String foram adicionadas no lugar do parâmetro 'Resposta', e o erro está sendo gerado porque está usando como parâmetro de correção tipos de variáveis que não existem.

 

Stacktrace: java.lang.Error: Unresolved compilation problems: 
    Resposta cannot be resolved to a variable
    Resposta cannot be resolved to a variable
    Resposta cannot be resolved to a variable

 

Como foi corrigido -> A comparação teve seu argumento substituído para a String literal "Culpado", como no algoritmo original.

 

Código -> public class JulgamentoPrisioneiro {

 

    private int PENA_INOCENCIA = 10;
    private int PENA_CONDENACAO_MUTUA = 15;
    private int PENA_CONDENACAO_INDIVIDUAL = 10;
    private int PENA_CONDENACAO_CUMPLICES = 11;

 

    public int calculaPena(String respostaPrisioneiroA, String respostaPrisioneiroB) {
        if (respostaPrisioneiroA == "Culpado") {
            if (respostaPrisioneiroB == "Culpado") {
                return PENA_CONDENACAO_MUTUA;
            } else {
                return PENA_INOCENCIA;
            }
        } else {
            if (respostaPrisioneiroB == "Culpado") {
                return PENA_CONDENACAO_INDIVIDUAL;
            } else {
                return PENA_CONDENACAO_CUMPLICES;
            }
        }

 

    }

 

}

 


